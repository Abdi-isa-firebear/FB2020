// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.firebears.commands;
import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj2.command.CommandBase;

import org.firebears.Robot;
import org.firebears.subsystems.Chassis;

import edu.wpi.first.wpilibj.Preferences;

/**
 *
 */
public class DriveCommand extends CommandBase {
  final Preferences config;
    int joystickSpeedAxis;
    int joystickRotateAxis;
    double adjust;

    public DriveCommand(Chassis chassis) {
      addRequirements(chassis);
      config = Preferences.getInstance();
        joystickSpeedAxis = config.getInt("joystick1.speedAxis", 1);
        joystickRotateAxis = config.getInt("joystick1.rotateAxis", 4);
        adjust = config.getDouble("driveCommand.deadBand", 0.1);
        
    }

    // Called just before this Command runs the first time
    @Override
    public void initialize() {

      // Could be a problem in the future, with adding requirements more than once.
      // Could check if already added as a requirement in the future if this turns out to be a problem.
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    public void execute() {
      double speed = -1 * Robot.oi.getXboxController().getRawAxis(joystickSpeedAxis);

      double rotation = Robot.oi.getXboxController().getRawAxis(joystickRotateAxis) * 0.7;
     Robot.chassis.drive((speed), (rotation));
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    public boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    public void end(boolean interrupted) {
    }

  
}
